##TEMPLATE-NAME 'C# - Morozov Engine (.NET 1.x) - Dolan'
##LANGUAGE 'C#'
##ENGINE-NAME 'Morozov GOLD Parser Engine'
##AUTHOR 'David Dolan (Engine by Vladimir Morozov)' 
##FILE-EXTENSION 'cs'
##NOTES
Created by Jay Bazuzi, 

based on a version created by Dave Dolan, 

based on the example code provided with the Morozov Engine Source Package available from http://www.notebar.com
##END-NOTES
##ID-CASE ProperCase
##ID-SEPARATOR '_'
##ID-SYMBOL-PREFIX 'Symbol'
##ID-RULE-PREFIX 'Rule'
///////////////////////////////////////////////////////////////////
//
// Autogenerated file. Do not edit.
//
///////////////////////////////////////////////////////////////////

using System;
using System.IO;

using GoldParser;

namespace Pash.ParserIntrinsics
{
    using Nodes;
    
    public partial class PashParserContext
    {
        private readonly Parser m_parser;

        public PashParserContext(Parser parser)
        {
            m_parser = parser;
        }

        public string GetTokenText()
        {
            if (m_parser.TokenSymbol.SymbolType == SymbolType.Terminal) 
                return m_parser.TokenString;
            else
                return null;
        }

        public ASTNode CreateASTNode()
        {
            ASTNode node = null;
            
            switch (m_parser.ReductionRule.Index)
            {
##RULES
                // %ID%:
                //      %Description%
                case %Index%: 
                    CreateNodeFor%ID%(m_parser, ref node);
                    return node;

##END-RULES
                default:
                    throw new RuleException("Unknown rule: Does your CGT Match your Code Revision?");
            }
        }

        
        #region CreateASTNode Dispatch hooks
##RULES
        // %Description%
        partial void CreateNodeFor%ID%(Parser parser, ref ASTNode node);
##END-RULES
        #endregion


    }
}
