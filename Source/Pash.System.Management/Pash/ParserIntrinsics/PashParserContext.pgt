##TEMPLATE-NAME 'C# - Morozov Engine (.NET 1.x) - Dolan'
##LANGUAGE 'C#'
##ENGINE-NAME 'Morozov GOLD Parser Engine'
##AUTHOR 'David Dolan (Engine by Vladimir Morozov)' 
##FILE-EXTENSION 'cs'
##NOTES
Created by Jay Bazuzi, 

based on a version created by Dave Dolan, 

based on the example code provided with the Morozov Engine Source Package available from http://www.notebar.com
##END-NOTES
##ID-CASE ProperCase
##ID-SEPARATOR '_'
##ID-SYMBOL-PREFIX 'Symbol'
##ID-RULE-PREFIX 'Rule'
///////////////////////////////////////////////////////////////////
//
// Autogenerated file. Do not edit.
//
///////////////////////////////////////////////////////////////////


using System;
using System.Reflection;
using System.IO;
using System.Text;
using System.Runtime.Serialization;
using System.Collections.Generic;

using GoldParser;

namespace Pash.ParserIntrinsics
{
    public class PashParserContext
    {

        // instance fields
        private Parser m_parser;

        private TextReader m_inputReader;



        // constructor
        public PashParserContext(Parser prser)
        {
            m_parser = prser;
        }


        private string GetTokenText()
        {
            // delete any of these that are non-terminals.

            switch (m_parser.TokenSymbol.Index)
            {

##SYMBOLS
                case (int)SymbolConstants.%ID% :
                //%Description%
                //Token Kind: %Kind%
                //todo: uncomment the next line if it's a terminal token ( if Token Kind = 1 )
                // return m_parser.TokenString;
                return null;

##END-SYMBOLS
                default:
                    throw new SymbolException("You don't want the text of a non-terminal symbol");

            }

        }

        public ASTNode CreateASTNode()
        {
            switch (m_parser.ReductionRule.Index)
            {
##RULES
                case (int)RuleConstants.%ID% :
                //%Description%
                //todo: Perhaps create an object in the AST.
                return null;

##END-RULES
                default:
                    throw new RuleException("Unknown rule: Does your CGT Match your Code Revision?");
            }

        }

    }

}
